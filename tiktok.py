
import base64

# Đoạn mã giải mã
encoded_data = '''

'''

# Giải mã và thực thi nội dung
exec(base64.b64decode(encoded_data).decode('utf-8'))
